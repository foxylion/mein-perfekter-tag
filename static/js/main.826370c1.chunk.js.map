{"version":3,"sources":["types/FoodList.ts","types/foodMetrics/ApfelMetrics.ts","types/foodMetrics/ApfelsaftMetrics.ts","types/foodMetrics/BananeMetrics.ts","types/foodMetrics/ButterMetrics.ts","types/foodMetrics/ColaMetrics.ts","types/foodMetrics/GoudaMetrics.ts","types/foodMetrics/MuesliMetrics.ts","types/foodMetrics/VollkornbrotMetrics.ts","types/foodMetrics/WeizenbroetchenMetrics.ts","components/FoodInput.tsx","components/ResultsTable.tsx","components/Content.tsx","components/Header.tsx","index.tsx"],"names":["foodList","info","nicename","unit","gPerUnit","metrics","kilokalorien","wasser","eiweiss_proteine","fett","kohlenhydrate","ballaststoffe","broteinheiten_de","broteinheiten_ch","carbohydrate_units_en","mineralstoffe_rohasche","organische_saeuren","alkohol_ethanol","fett_gesamt","gesaettigte_fettsaeuren","zucker","salz","vitamin_a_retinolaequivalent","vitamin_a_retinol","vitamin_a_betacarotin","vitamin_b1_thiamin","vitamin_b2_riboflavin","vitamin_b3_niacin_nicotinsaeure","vitamin_b3_niacinaequivalent","vitamin_b5_pantothensaeure","vitamin_b6_pyridoxin","vitamin_b7_biotin_vitamin_h","vitamin_b9_gesamte_folsaeure","vitamin_b12_cobalamin","vitamin_c_ascorbinsaeure","vitamin_d_calciferole","vitamin_e_tocopherol","vitamin_k_phyllochinon","natrium","kalium","calcium","magnesium","phosphor","schwefel","chlorid","eisen","zink","kupfer","mangan","fluorid","iodid","FoodInput","props","react_default","a","createElement","index_es","label","food","helperText","value","onChange","event","parseFloat","target","type","fullWidth","reduce","results","field","acc","cur","units","toFixed","NoBreakCell","align","style","whiteSpace","children","ResultsTable","Fragment","variant","overflow","padding","map","_ref","weight","factor","pretty","ResultsTable_NoBreakCell","FullWidthGridItem","item","xs","sm","Content","withStyles","theme","createStyles","paper","maxWidth","margin","spacing","_useState","useState","_useState2","Object","slicedToArray","setUnits","_useState3","_useState4","showResults","setShowResults","idx","filter","result","undefined","classes","root","container","Content_FullWidthGridItem","key","FoodInput_FoodInput","_","newValue","objectSpread","defineProperty","color","onClick","ResultsTable_ResultsTable","Header","appTitle","verticalAlign","iconsBar","opacity","marginLeft","toolbar","flexDirection","alignItems","position","className","installStyles","defaultTheme","createMuiTheme","typography","useNextVariants","ReactDOM","render","styles_index_es","document","getElementById"],"mappings":"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","file":"static/js/main.826370c1.chunk.js","sourcesContent":["import { FoodMetrics } from './FoodMetrics';\nimport { ApfelMetrics } from './foodMetrics/ApfelMetrics';\nimport { ApfelsaftMetrics } from './foodMetrics/ApfelsaftMetrics';\nimport { BananeMetrics } from './foodMetrics/BananeMetrics';\nimport { ButterMetrics } from './foodMetrics/ButterMetrics';\nimport { ColaMetrics } from './foodMetrics/ColaMetrics';\nimport { GoudaMetrics } from './foodMetrics/GoudaMetrics';\nimport { MuesliMetrics } from './foodMetrics/MuesliMetrics';\nimport { VollkornbrotMetrics } from './foodMetrics/VollkornbrotMetrics';\nimport { WeizenbroetchenMetrics } from './foodMetrics/WeizenbroetchenMetrics';\n\nexport interface FoodInfo {\n  nicename: string;\n  unit: string;\n  gPerUnit: number;\n}\n\nexport interface Food {\n  info: FoodInfo;\n  metrics: FoodMetrics;\n}\n\nexport const foodList: Food[] = [\n  { info: { nicename: 'Apfel', unit: 'Stück (ca. 150g)', gPerUnit: 150 }, metrics: ApfelMetrics },\n  { info: { nicename: 'Apfelsaft', unit: 'Glas', gPerUnit: 250 }, metrics: ApfelsaftMetrics },\n  { info: { nicename: 'Banane', unit: 'Stück (ca. 130g)', gPerUnit: 130 }, metrics: BananeMetrics },\n  { info: { nicename: 'Butter', unit: 'Stückchen (ca. 10g)', gPerUnit: 10 }, metrics: ButterMetrics },\n  { info: { nicename: 'Cola', unit: 'Glas', gPerUnit: 250 }, metrics: ColaMetrics },\n  { info: { nicename: 'Käse (Gouda)', unit: 'Scheibe (ca. 40g)', gPerUnit: 40 }, metrics: GoudaMetrics },\n  { info: { nicename: 'Müsli, Milch & Obst', unit: 'Schüssel (ca. 300g)', gPerUnit: 300 }, metrics: MuesliMetrics },\n  { info: { nicename: 'Vollkornbrot', unit: 'Scheibe (ca. 50g)', gPerUnit: 50 }, metrics: VollkornbrotMetrics },\n  { info: { nicename: 'Brötchen (Weizen)', unit: 'Stück (ca. 50g)', gPerUnit: 50 }, metrics: WeizenbroetchenMetrics }\n];\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ApfelMetrics: FoodMetrics = {\n  kilokalorien: 52, // kcal\n  wasser: 85, // g\n  eiweiss_proteine: 0.3, // g\n  fett: 0.4, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.3, // g\n  organische_saeuren: 0.5, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0.4, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 10.3, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 8, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 45, // µg\n  vitamin_b1_thiamin: 30, // µg\n  vitamin_b2_riboflavin: 30, // µg\n  vitamin_b3_niacin_nicotinsaeure: 200, // µg\n  vitamin_b3_niacinaequivalent: 233, // µg\n  vitamin_b5_pantothensaeure: 100, // µg\n  vitamin_b6_pyridoxin: 50, // µg\n  vitamin_b7_biotin_vitamin_h: 1, // µg\n  vitamin_b9_gesamte_folsaeure: 7, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 12, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 490, // µg\n  vitamin_k_phyllochinon: 4, // µg\n  natrium: 3, // mg\n  kalium: 144, // mg\n  calcium: 7, // mg\n  magnesium: 6, // mg\n  phosphor: 11, // mg\n  schwefel: 6, // mg\n  chlorid: 2, // mg\n  eisen: 480, // µg\n  zink: 120, // µg\n  kupfer: 100, // µg\n  mangan: 65, // µg\n  fluorid: 7, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ApfelsaftMetrics: FoodMetrics = {\n  kilokalorien: 49, // kcal\n  wasser: 88, // g\n  eiweiss_proteine: 0.3, // g\n  fett: 0.3, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.3, // g\n  organische_saeuren: 0.5, // g\n  alkohol_ethanol: 0.2, // g\n  fett_gesamt: 0.3, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 9.6, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 8, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 45, // µg\n  vitamin_b1_thiamin: 25, // µg\n  vitamin_b2_riboflavin: 25, // µg\n  vitamin_b3_niacin_nicotinsaeure: 165, // µg\n  vitamin_b3_niacinaequivalent: 198, // µg\n  vitamin_b5_pantothensaeure: 83, // µg\n  vitamin_b6_pyridoxin: 41, // µg\n  vitamin_b7_biotin_vitamin_h: 1, // µg\n  vitamin_b9_gesamte_folsaeure: 4, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 7.428, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 506, // µg\n  vitamin_k_phyllochinon: 4, // µg\n  natrium: 3, // mg\n  kalium: 126, // mg\n  calcium: 7, // mg\n  magnesium: 6, // mg\n  phosphor: 11, // mg\n  schwefel: 6, // mg\n  chlorid: 2, // mg\n  eisen: 470, // µg\n  zink: 124, // µg\n  kupfer: 103, // µg\n  mangan: 66, // µg\n  fluorid: 7, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const BananeMetrics: FoodMetrics = {\n  kilokalorien: 95, // kcal\n  wasser: 74, // g\n  eiweiss_proteine: 1, // g\n  fett: 0.2, // g\n  kohlenhydrate: 21, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 2, // BE\n  broteinheiten_ch: 2, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0.2, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 18.4, // g\n  salz: 0.1, // g\n  vitamin_a_retinolaequivalent: 38, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 230, // µg\n  vitamin_b1_thiamin: 44, // µg\n  vitamin_b2_riboflavin: 57, // µg\n  vitamin_b3_niacin_nicotinsaeure: 650, // µg\n  vitamin_b3_niacinaequivalent: 950, // µg\n  vitamin_b5_pantothensaeure: 230, // µg\n  vitamin_b6_pyridoxin: 370, // µg\n  vitamin_b7_biotin_vitamin_h: 6, // µg\n  vitamin_b9_gesamte_folsaeure: 20, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 12, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 270, // µg\n  vitamin_k_phyllochinon: 10, // µg\n  natrium: 1, // mg\n  kalium: 393, // mg\n  calcium: 9, // mg\n  magnesium: 36, // mg\n  phosphor: 28, // mg\n  schwefel: 13, // mg\n  chlorid: 109, // mg\n  eisen: 550, // µg\n  zink: 220, // µg\n  kupfer: 130, // µg\n  mangan: 530, // µg\n  fluorid: 20, // µg\n  iodid: 3, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ButterMetrics: FoodMetrics = {\n  kilokalorien: 741, // kcal\n  wasser: 15, // g\n  eiweiss_proteine: 1, // g\n  fett: 83, // g\n  kohlenhydrate: 1, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0.1, // BE\n  broteinheiten_ch: 0.1, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 0.1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 83.2, // g\n  gesaettigte_fettsaeuren: 50.5, // g\n  zucker: 0.6, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 653, // µg\n  vitamin_a_retinol: 590, // µg\n  vitamin_a_betacarotin: 380, // µg\n  vitamin_b1_thiamin: 5, // µg\n  vitamin_b2_riboflavin: 22, // µg\n  vitamin_b3_niacin_nicotinsaeure: 34, // µg\n  vitamin_b3_niacinaequivalent: 184, // µg\n  vitamin_b5_pantothensaeure: 47, // µg\n  vitamin_b6_pyridoxin: 5, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 3, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 200, // µg\n  vitamin_d_calciferole: 1, // µg\n  vitamin_e_tocopherol: 2.022, // µg\n  vitamin_k_phyllochinon: 60, // µg\n  natrium: 5, // mg\n  kalium: 16, // mg\n  calcium: 13, // mg\n  magnesium: 3, // mg\n  phosphor: 21, // mg\n  schwefel: 9, // mg\n  chlorid: 20, // mg\n  eisen: 90, // µg\n  zink: 230, // µg\n  kupfer: 15, // µg\n  mangan: 40, // µg\n  fluorid: 130, // µg\n  iodid: 4, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ColaMetrics: FoodMetrics = {\n  kilokalorien: 61, // kcal\n  wasser: 85, // g\n  eiweiss_proteine: 3, // g\n  fett: 0, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0, // g\n  gesaettigte_fettsaeuren: 0, // g\n  zucker: 10.9, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 0, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 0, // µg\n  vitamin_b1_thiamin: 0, // µg\n  vitamin_b2_riboflavin: 0, // µg\n  vitamin_b3_niacin_nicotinsaeure: 0, // µg\n  vitamin_b3_niacinaequivalent: 283, // µg\n  vitamin_b5_pantothensaeure: 0, // µg\n  vitamin_b6_pyridoxin: 0, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 0, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 0, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 4, // mg\n  kalium: 1, // mg\n  calcium: 4, // mg\n  magnesium: 1, // mg\n  phosphor: 6, // mg\n  schwefel: 9, // mg\n  chlorid: 10, // mg\n  eisen: 30, // µg\n  zink: 10, // µg\n  kupfer: 30, // µg\n  mangan: 35, // µg\n  fluorid: 15, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const GoudaMetrics: FoodMetrics = {\n  kilokalorien: 300, // kcal\n  wasser: 49, // g\n  eiweiss_proteine: 25, // g\n  fett: 22, // g\n  kohlenhydrate: 0, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 3, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 22.3, // g\n  gesaettigte_fettsaeuren: 13.5, // g\n  zucker: 0, // g\n  salz: 2, // g\n  vitamin_a_retinolaequivalent: 272, // µg\n  vitamin_a_retinol: 250, // µg\n  vitamin_a_betacarotin: 130, // µg\n  vitamin_b1_thiamin: 40, // µg\n  vitamin_b2_riboflavin: 300, // µg\n  vitamin_b3_niacin_nicotinsaeure: 100, // µg\n  vitamin_b3_niacinaequivalent: 5.483, // µg\n  vitamin_b5_pantothensaeure: 400, // µg\n  vitamin_b6_pyridoxin: 70, // µg\n  vitamin_b7_biotin_vitamin_h: 2, // µg\n  vitamin_b9_gesamte_folsaeure: 36, // µg\n  vitamin_b12_cobalamin: 2, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0.5, // µg\n  vitamin_e_tocopherol: 670, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 1.089, // mg\n  kalium: 123, // mg\n  calcium: 958, // mg\n  magnesium: 33, // mg\n  phosphor: 650, // mg\n  schwefel: 240, // mg\n  chlorid: 900, // mg\n  eisen: 280, // µg\n  zink: 4.25, // µg\n  kupfer: 40, // µg\n  mangan: 40, // µg\n  fluorid: 115, // µg\n  iodid: 12, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const MuesliMetrics: FoodMetrics = {\n  kilokalorien: 126, // kcal\n  wasser: 68, // g\n  eiweiss_proteine: 3, // g\n  fett: 2, // g\n  kohlenhydrate: 23, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 2, // BE\n  broteinheiten_ch: 2, // BE\n  carbohydrate_units_en: 2, // CU\n  mineralstoffe_rohasche: 1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 2, // g\n  gesaettigte_fettsaeuren: 0.6, // g\n  zucker: 11.4, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 15, // µg\n  vitamin_a_retinol: 4, // µg\n  vitamin_a_betacarotin: 62, // µg\n  vitamin_b1_thiamin: 136, // µg\n  vitamin_b2_riboflavin: 71, // µg\n  vitamin_b3_niacin_nicotinsaeure: 322, // µg\n  vitamin_b3_niacinaequivalent: 872, // µg\n  vitamin_b5_pantothensaeure: 330, // µg\n  vitamin_b6_pyridoxin: 71, // µg\n  vitamin_b7_biotin_vitamin_h: 5, // µg\n  vitamin_b9_gesamte_folsaeure: 9, // µg\n  vitamin_b12_cobalamin: 0.1, // µg\n  vitamin_c_ascorbinsaeure: 11.123, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 436, // µg\n  vitamin_k_phyllochinon: 15, // µg\n  natrium: 10, // mg\n  kalium: 183, // mg\n  calcium: 34, // mg\n  magnesium: 33, // mg\n  phosphor: 93, // mg\n  schwefel: 45, // mg\n  chlorid: 27, // mg\n  eisen: 1.185, // µg\n  zink: 877, // µg\n  kupfer: 179, // µg\n  mangan: 864, // µg\n  fluorid: 16, // µg\n  iodid: 3, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const VollkornbrotMetrics: FoodMetrics = {\n  kilokalorien: 188, // kcal\n  wasser: 44, // g\n  eiweiss_proteine: 6, // g\n  fett: 1, // g\n  kohlenhydrate: 38, // g\n  ballaststoffe: 9, // g\n  broteinheiten_de: 3, // BE\n  broteinheiten_ch: 4, // BE\n  carbohydrate_units_en: 3, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 0.1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 1, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 0.8, // g\n  salz: 1.1, // g\n  vitamin_a_retinolaequivalent: 1, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 4, // µg\n  vitamin_b1_thiamin: 102, // µg\n  vitamin_b2_riboflavin: 98, // µg\n  vitamin_b3_niacin_nicotinsaeure: 1.329, // µg\n  vitamin_b3_niacinaequivalent: 2.396, // µg\n  vitamin_b5_pantothensaeure: 534, // µg\n  vitamin_b6_pyridoxin: 152, // µg\n  vitamin_b7_biotin_vitamin_h: 5, // µg\n  vitamin_b9_gesamte_folsaeure: 36, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 635, // µg\n  vitamin_k_phyllochinon: 31, // µg\n  natrium: 430, // mg\n  kalium: 290, // mg\n  calcium: 21, // mg\n  magnesium: 56, // mg\n  phosphor: 232, // mg\n  schwefel: 91, // mg\n  chlorid: 705, // mg\n  eisen: 2.661, // µg\n  zink: 2.409, // µg\n  kupfer: 301, // µg\n  mangan: 2.287, // µg\n  fluorid: 102, // µg\n  iodid: 4, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const WeizenbroetchenMetrics: FoodMetrics = {\n  kilokalorien: 248, // kcal\n  wasser: 36, // g\n  eiweiss_proteine: 7, // g\n  fett: 1, // g\n  kohlenhydrate: 51, // g\n  ballaststoffe: 3, // g\n  broteinheiten_de: 4, // BE\n  broteinheiten_ch: 5, // BE\n  carbohydrate_units_en: 3, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 1.4, // g\n  gesaettigte_fettsaeuren: 0.3, // g\n  zucker: 1, // g\n  salz: 1.2, // g\n  vitamin_a_retinolaequivalent: 4, // µg\n  vitamin_a_retinol: 3, // µg\n  vitamin_a_betacarotin: 4, // µg\n  vitamin_b1_thiamin: 68, // µg\n  vitamin_b2_riboflavin: 51, // µg\n  vitamin_b3_niacin_nicotinsaeure: 765, // µg\n  vitamin_b3_niacinaequivalent: 1.998, // µg\n  vitamin_b5_pantothensaeure: 149, // µg\n  vitamin_b6_pyridoxin: 84, // µg\n  vitamin_b7_biotin_vitamin_h: 2, // µg\n  vitamin_b9_gesamte_folsaeure: 9, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 1, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 153, // µg\n  vitamin_k_phyllochinon: 9, // µg\n  natrium: 451, // mg\n  kalium: 100, // mg\n  calcium: 16, // mg\n  magnesium: 21, // mg\n  phosphor: 78, // mg\n  schwefel: 71, // mg\n  chlorid: 731, // mg\n  eisen: 1.325, // µg\n  zink: 924, // µg\n  kupfer: 180, // µg\n  mangan: 511, // µg\n  fluorid: 43, // µg\n  iodid: 2, // µg\n};\n","import React from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { Food } from '../types/FoodList';\n\nexport interface Props {\n  food: Food;\n  value?: number;\n  onChange: (food: Food, value: number) => void;\n}\n\nexport const FoodInput: React.FunctionComponent<Props> = props => {\n  return (\n    <TextField\n      label={props.food.info.nicename}\n      helperText={props.food.info.unit}\n      value={props.value}\n      onChange={event => props.onChange(props.food, parseFloat(event.target.value))}\n      type=\"number\"\n      fullWidth={true}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Table, TableBody, TableCell, TableFooter, TableHead, TableRow, Typography } from '@material-ui/core';\n\nimport { Food, foodList } from '../types/FoodList';\nimport { FoodMetrics } from '../types/FoodMetrics';\n\nexport interface ResultProp {\n  food: Food;\n  units: number;\n}\n\nexport interface Props {\n  results: ResultProp[];\n}\n\nconst reduce = (results: ResultProp[], field: keyof FoodMetrics) => {\n  const reducer = (acc: number, cur: ResultProp) =>\n    acc + ((cur.units * cur.food.info.gPerUnit) / 100) * cur.food.metrics[field];\n  const result = results.reduce(reducer, 0);\n  return result.toFixed(2);\n};\n\nconst NoBreakCell = (props: { children: React.ReactNode }) => (\n  <TableCell align=\"right\" style={{ whiteSpace: 'nowrap' }}>\n    {props.children}\n  </TableCell>\n);\n\nexport const ResultsTable: React.FunctionComponent<Props> = props => (\n  <>\n    <Typography variant=\"display1\">Ergebnis</Typography>\n    <div style={{ overflow: 'auto' }}>\n      <Table padding=\"dense\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Nahrungsmittel</TableCell>\n            <TableCell>Menge</TableCell>\n            <TableCell>Kalorien</TableCell>\n            <TableCell>Salz</TableCell>\n            <TableCell>Zucker</TableCell>\n            <TableCell>Wasser</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {props.results.map(({ food, units }) => {\n            const weight = units * food.info.gPerUnit;\n            const factor = weight / 100;\n            const pretty = (value: number) => (factor * value).toFixed(2);\n            return (\n              <TableRow>\n                <TableCell>{food.info.nicename}</TableCell>\n                <NoBreakCell>{weight} g</NoBreakCell>\n                <NoBreakCell>{pretty(food.metrics.kilokalorien)} kcal</NoBreakCell>\n                <NoBreakCell>{pretty(food.metrics.salz)} g</NoBreakCell>\n                <NoBreakCell>{pretty(food.metrics.zucker)} g</NoBreakCell>\n                <NoBreakCell>{pretty(food.metrics.wasser)} ml</NoBreakCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n\n        <TableFooter>\n          <TableRow>\n            <TableCell>Summe</TableCell>\n            <TableCell />\n            <NoBreakCell>{reduce(props.results, 'kilokalorien')} kcal</NoBreakCell>\n            <NoBreakCell>{reduce(props.results, 'salz')} g</NoBreakCell>\n            <NoBreakCell>{reduce(props.results, 'zucker')} g</NoBreakCell>\n            <NoBreakCell>{reduce(props.results, 'wasser')} ml</NoBreakCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell>Tagesbedarf</TableCell>\n            <TableCell />\n            <NoBreakCell>-</NoBreakCell>\n            <NoBreakCell>?</NoBreakCell>\n            <NoBreakCell>?</NoBreakCell>\n            <NoBreakCell>2650 ml</NoBreakCell>\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </div>\n  </>\n);\n","import React, { useState } from 'react';\n\nimport { Button, Grid, Paper, Theme } from '@material-ui/core';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/styles';\n\nimport { foodList } from '../types/FoodList';\nimport { FoodInput } from './FoodInput';\nimport { ResultProp, ResultsTable } from './ResultsTable';\n\ninterface UnitsMap {\n  [key: number]: number | undefined;\n}\n\nconst FullWidthGridItem = (props: { children: React.ReactNode }) => (\n  <Grid item xs={12} sm={12}>\n    {props.children}\n  </Grid>\n);\n\nconst contentStyles = (theme: Theme) =>\n  createStyles({\n    paper: { maxWidth: '600px', margin: '100px auto', padding: theme.spacing.unit * 2 }\n  });\n\nexport const Content: React.ComponentType<{}> = withStyles(contentStyles)((props: WithStyles<typeof contentStyles>) => {\n  const [units, setUnits] = useState<UnitsMap>({});\n  const [showResults, setShowResults] = useState<boolean>(false);\n  const results = foodList\n    .map((food, idx) => ({ food, units: units[idx] }))\n    .filter((result): result is ResultProp => result.units !== undefined && result.units !== 0);\n\n  return (\n    <Paper classes={{ root: props.classes.paper }}>\n      <Grid container={true} spacing={8}>\n        {!showResults && (\n          <>\n            {foodList.map((food, idx) => {\n              return (\n                <FullWidthGridItem key={idx}>\n                  <FoodInput\n                    food={food}\n                    onChange={(_, newValue) => setUnits({ ...units, [idx]: newValue })}\n                    value={units[idx]}\n                  />\n                </FullWidthGridItem>\n              );\n            })}\n            <FullWidthGridItem>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => setShowResults(true)}>\n                Auswertung\n              </Button>\n            </FullWidthGridItem>\n          </>\n        )}\n        {showResults && (\n          <>\n            <FullWidthGridItem>\n              <ResultsTable results={results} />\n            </FullWidthGridItem>\n            <FullWidthGridItem>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => setShowResults(false)}>\n                Zurück\n              </Button>\n            </FullWidthGridItem>\n          </>\n        )}\n      </Grid>\n    </Paper>\n  );\n});\n","import { AppBar, Icon, Theme, Toolbar, Typography } from '@material-ui/core';\nimport { createStyles, WithStyles, withStyles } from '@material-ui/styles';\nimport React from 'react';\nimport ReactRainbow from 'react-rainbow-text';\n\nconst appIconStyles = (theme: Theme) =>\n  createStyles({\n    appTitle: { verticalAlign: 'middle' },\n    iconsBar: { whiteSpace: 'nowrap', overflow: 'hidden', opacity: 0.7, marginLeft: '-20px' },\n    toolbar: { flexDirection: 'column', alignItems: 'flex-start', overflow: 'hidden' }\n  });\n\nexport const Header: React.ComponentType<{}> = withStyles(appIconStyles)((props: WithStyles<typeof appIconStyles>) => (\n  <AppBar position=\"absolute\" color=\"default\">\n    <Toolbar classes={{ root: props.classes.toolbar }}>\n      <Typography variant=\"h6\" color=\"inherit\">\n        <span className={props.classes.appTitle}>Mein Perfekter Tag 🍔</span>\n      </Typography>\n      <div className={props.classes.iconsBar}>\n        🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🥝🍅🥥🥑🍆🥔🥕🌽🌶🥒🥦🍄🥜🌰🍞🥐🥖🥨🥞🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🥙\n        🍳🥘🍲🥣🥗🍿🥫🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🥟🥠🥡🍦🍧🍨🍩🍪🎂🍰🥧🍫🍬🍭🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑\n        🍒🍓🥝🍅🥥🥑🍆🥔🥕🌽🌶🥒🥦🍄🥜🌰🍞🥐🥖🥨🥞🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🥙 🍳🥘🍲🥣🥗🍿🥫🍱🍘🍙🍚\n        🍛🍜🍝🍠🍢🍣🍤🍥🍡🥟🥠🥡🍦🍧🍨🍩🍪🎂🍰🥧🍫🍬🍭🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🥝🍅🥥🥑🍆🥔🥕🌽🌶\n        🥒🥦🍄🥜🌰🍞🥐🥖🥨🥞🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🥙 🍳🥘🍲🥣🥗🍿🥫🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🥟🥠\n        🥡🍦🍧🍨🍩🍪🎂🍰🥧🍫🍬🍭\n      </div>\n    </Toolbar>\n  </AppBar>\n));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createMuiTheme, CssBaseline } from '@material-ui/core';\nimport { install as installStyles, ThemeProvider } from '@material-ui/styles';\n\nimport { Content } from './components/Content';\nimport { Header } from './components/Header';\n\ninstallStyles();\n\nconst defaultTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst App: React.FunctionComponent<{}> = () => (\n  <>\n    <CssBaseline />\n    <ThemeProvider theme={defaultTheme}>\n      <Header />\n      <Content />\n    </ThemeProvider>\n  </>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}