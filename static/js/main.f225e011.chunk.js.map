{"version":3,"sources":["config.ts","components/FoodEmojiBackground.tsx","components/header/Header.tsx","types/FoodList.ts","types/foodMetrics/ButterMetrics.ts","types/foodMetrics/GoudaMetrics.ts","types/foodMetrics/MuesliMetrics.ts","types/foodMetrics/VollkornbrotMetrics.ts","types/foodMetrics/WeizenbroetchenMetrics.ts","types/foodMetrics/PaniertesSchnitzelMetrics.ts","types/foodMetrics/PommesFritesMetrics.ts","types/foodMetrics/ApfelMetrics.ts","types/foodMetrics/BananeMetrics.ts","types/foodMetrics/MineralwasserMetrics.ts","types/foodMetrics/SprudelMetrics.ts","types/foodMetrics/KaffeeMetrics.ts","types/foodMetrics/KaffeeMilchMetrics.ts","types/foodMetrics/ApfelsaftMetrics.ts","types/foodMetrics/ColaMetrics.ts","components/grid/FullWidthGridItem.tsx","components/grid/PrettyContent.tsx","components/print/PrintTable.tsx","types/FoodMetrics.ts","components/questionaire/FoodInput.tsx","components/questionaire/ResultsTable.tsx","components/questionaire/QuestionairePage.tsx","index.tsx"],"names":["install","FoodEmojiBackground","react_default","a","createElement","style","position","zIndex","left","right","top","bottom","overflow","opacity","fontSize","Array","fill","map","_","i","key","useStyles","makeStyles","theme","toolbar","backgroundColor","color","justifyContent","burger","cursor","Header","props","classes","core_index_es","root","variant","className","onClick","onHiddenClick","foodList","info","nicename","unit","gPerUnit","metrics","kilokalorien","wasser","eiweiss_proteine","fett","kohlenhydrate","ballaststoffe","broteinheiten_de","broteinheiten_ch","carbohydrate_units_en","mineralstoffe_rohasche","organische_saeuren","alkohol_ethanol","fett_gesamt","gesaettigte_fettsaeuren","zucker","salz","vitamin_a_retinolaequivalent","vitamin_a_retinol","vitamin_a_betacarotin","vitamin_b1_thiamin","vitamin_b2_riboflavin","vitamin_b3_niacin_nicotinsaeure","vitamin_b3_niacinaequivalent","vitamin_b5_pantothensaeure","vitamin_b6_pyridoxin","vitamin_b7_biotin_vitamin_h","vitamin_b9_gesamte_folsaeure","vitamin_b12_cobalamin","vitamin_c_ascorbinsaeure","vitamin_d_calciferole","vitamin_e_tocopherol","vitamin_k_phyllochinon","natrium","kalium","calcium","magnesium","phosphor","schwefel","chlorid","eisen","zink","kupfer","mangan","fluorid","iodid","FullWidthGridItem","item","xs","sm","children","paper","maxWidth","concat","margin","padding","spacing","PrettyContent","container","PrintTable","PrettyContent_PrettyContent","FullWidthGridItem_FullWidthGridItem","food","idx","fontWeight","fontStyle","relevantMetrics","getNiceName","field","getDescription","formatValue","value","toLocaleString","minimumFractionDigits","maximumFractionDigits","toFixed","getRecommendedDailyAmount","NaN","FoodInput","textFieldRef","useRef","useEffect","focus","undefined","current","label","helperText","type","fullWidth","onChange","event","parseFloat","target","onFocus","onKeyDown","onEnterKey","inputRef","NoBreakCell","align","whiteSpace","ResultsTable","Fragment","ResultsTable_NoBreakCell","results","result","units","metricName","showInfo","isNaN","reduce","acc","cur","_ref","QuestionairePage","_useState","useState","_useState2","Object","slicedToArray","setUnits","_useState3","_useState4","focusedIdx","setFocusedIdx","_useState5","_useState6","showResults","setShowResults","_useState7","_useState8","visibleInfo","setVisibleInfo","filter","FoodInput_FoodInput","newValue","objectSpread","defineProperty","ResultsTable_ResultsTable","open","onClose","defaultTheme","createMuiTheme","typography","useNextVariants","ReactDOM","render","showPrintTable","setShowPrintTable","index_es","FoodEmojiBackground_FoodEmojiBackground","Header_Header","QuestionairePage_QuestionairePage","PrintTable_PrintTable","document","getElementById"],"mappings":"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","file":"static/js/main.f225e011.chunk.js","sourcesContent":["import { install } from '@material-ui/styles';\n\ninstall();\n\nexport const installStyles = () => {\n  // dummy function\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport React from 'react';\n\nexport const FoodEmojiBackground: React.FunctionComponent<{}> = () => (\n  <div\n    style={{\n      position: 'fixed',\n      zIndex: -1,\n      left: 0,\n      right: -100,\n      top: 0,\n      bottom: 0,\n      overflow: 'hidden',\n      opacity: 0.2,\n      fontSize: '2em' // Otherwise Chrome on Android won't render the emojis\n    }}\n  >\n    {Array(40)\n      .fill(0)\n      .map((_, i) => (\n        <span key={i}>\n          🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🥝🍅🥥🥑🍆🥔🥕🌽🌶🥒🥦🍄🥜🌰🍞🥐🥖🥨🥞🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🥙🍳🥘🍲🥣🥗🍿🥫🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🥟🥠🥡🍦🍧🍨🍩🍪🎂🍰🥧🍫🍬🍭\n        </span>\n      ))}\n  </div>\n);\n","import React from 'react';\n\nimport { AppBar, Theme, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  toolbar: { backgroundColor: '#000', color: '#fff', justifyContent: 'center' },\n  burger: { fontSize: '1.3em', cursor: 'pointer' }\n}));\n\nexport interface Props {\n  onHiddenClick: () => void;\n}\n\nexport const Header: React.ComponentType<Props> = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"absolute\" color=\"default\">\n      <Toolbar classes={{ root: classes.toolbar }}>\n        <Typography variant=\"headline\" color=\"inherit\">\n          Mein Perfekter Tag&nbsp;&nbsp;\n          <span className={classes.burger} onClick={props.onHiddenClick}>\n            🍔\n          </span>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { FoodMetrics } from './FoodMetrics';\nimport { ApfelMetrics } from './foodMetrics/ApfelMetrics';\nimport { ApfelsaftMetrics } from './foodMetrics/ApfelsaftMetrics';\nimport { BananeMetrics } from './foodMetrics/BananeMetrics';\nimport { ButterMetrics } from './foodMetrics/ButterMetrics';\nimport { ColaMetrics } from './foodMetrics/ColaMetrics';\nimport { GoudaMetrics } from './foodMetrics/GoudaMetrics';\nimport { KaffeeMetrics } from './foodMetrics/KaffeeMetrics';\nimport { KaffeeMilchMetrics } from './foodMetrics/KaffeeMilchMetrics';\nimport { MineralwasserMetrics } from './foodMetrics/MineralwasserMetrics';\nimport { MuesliMetrics } from './foodMetrics/MuesliMetrics';\nimport { PaniertesSchnitzelMetrics } from './foodMetrics/PaniertesSchnitzelMetrics';\nimport { PommesFritesMetrics } from './foodMetrics/PommesFritesMetrics';\nimport { SprudelMetrics } from './foodMetrics/SprudelMetrics';\nimport { VollkornbrotMetrics } from './foodMetrics/VollkornbrotMetrics';\nimport { WeizenbroetchenMetrics } from './foodMetrics/WeizenbroetchenMetrics';\n\nexport interface FoodInfo {\n  nicename: string;\n  unit: string;\n  gPerUnit: number;\n}\n\nexport interface Food {\n  info: FoodInfo;\n  metrics: FoodMetrics;\n}\n\nexport const foodList: Food[] = [\n  // Frühstück\n  { info: { nicename: 'Butter', unit: 'Stückchen (ca. 10g)', gPerUnit: 10 }, metrics: ButterMetrics },\n  { info: { nicename: 'Käse (Gouda)', unit: 'Scheibe (ca. 40g)', gPerUnit: 40 }, metrics: GoudaMetrics },\n  { info: { nicename: 'Müsli, Milch & Obst', unit: 'Schüssel (ca. 300g)', gPerUnit: 300 }, metrics: MuesliMetrics },\n  { info: { nicename: 'Vollkornbrot', unit: 'Scheibe (ca. 50g)', gPerUnit: 50 }, metrics: VollkornbrotMetrics },\n  { info: { nicename: 'Brötchen (Weizen)', unit: 'Stück (ca. 50g)', gPerUnit: 50 }, metrics: WeizenbroetchenMetrics },\n\n  // Mittag\n  { info: { nicename: 'Paniertes Schnitzel (Schwein)', unit: 'Stück (ca. 150g)', gPerUnit: 150 }, metrics: PaniertesSchnitzelMetrics },\n  { info: { nicename: 'Pommes Frites', unit: 'Portion (ca. 120g)', gPerUnit: 120 }, metrics: PommesFritesMetrics },\n\n  // Gemüse & Obst\n  { info: { nicename: 'Apfel', unit: 'Stück (ca. 150g)', gPerUnit: 150 }, metrics: ApfelMetrics },\n  { info: { nicename: 'Banane', unit: 'Stück (ca. 130g)', gPerUnit: 130 }, metrics: BananeMetrics },\n\n  // Getränke\n  { info: { nicename: 'Wasser (still)', unit: 'Glas (250 ml)', gPerUnit: 250 }, metrics: MineralwasserMetrics },\n  { info: { nicename: 'Sprudel', unit: 'Glas (250 ml)', gPerUnit: 250 }, metrics: SprudelMetrics },\n  { info: { nicename: 'Kaffee', unit: 'Tasse (150 ml)', gPerUnit: 150 }, metrics: KaffeeMetrics },\n  { info: { nicename: 'Kaffee mit Milch', unit: 'Tasse (150 ml)', gPerUnit: 150 }, metrics: KaffeeMilchMetrics },\n  { info: { nicename: 'Apfelsaft', unit: 'Glas (250 ml)', gPerUnit: 250 }, metrics: ApfelsaftMetrics },\n  { info: { nicename: 'Cola', unit: 'Glas (250 ml)', gPerUnit: 250 }, metrics: ColaMetrics }\n];\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ButterMetrics: FoodMetrics = {\n  kilokalorien: 741, // kcal\n  wasser: 15, // g\n  eiweiss_proteine: 1, // g\n  fett: 83, // g\n  kohlenhydrate: 1, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0.1, // BE\n  broteinheiten_ch: 0.1, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 0.1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 83.2, // g\n  gesaettigte_fettsaeuren: 50.5, // g\n  zucker: 0.6, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 653, // µg\n  vitamin_a_retinol: 590, // µg\n  vitamin_a_betacarotin: 380, // µg\n  vitamin_b1_thiamin: 5, // µg\n  vitamin_b2_riboflavin: 22, // µg\n  vitamin_b3_niacin_nicotinsaeure: 34, // µg\n  vitamin_b3_niacinaequivalent: 184, // µg\n  vitamin_b5_pantothensaeure: 47, // µg\n  vitamin_b6_pyridoxin: 5, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 3, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 200, // µg\n  vitamin_d_calciferole: 1, // µg\n  vitamin_e_tocopherol: 2.022, // µg\n  vitamin_k_phyllochinon: 60, // µg\n  natrium: 5, // mg\n  kalium: 16, // mg\n  calcium: 13, // mg\n  magnesium: 3, // mg\n  phosphor: 21, // mg\n  schwefel: 9, // mg\n  chlorid: 20, // mg\n  eisen: 90, // µg\n  zink: 230, // µg\n  kupfer: 15, // µg\n  mangan: 40, // µg\n  fluorid: 130, // µg\n  iodid: 4, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const GoudaMetrics: FoodMetrics = {\n  kilokalorien: 300, // kcal\n  wasser: 49, // g\n  eiweiss_proteine: 25, // g\n  fett: 22, // g\n  kohlenhydrate: 0, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 3, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 22.3, // g\n  gesaettigte_fettsaeuren: 13.5, // g\n  zucker: 0, // g\n  salz: 2, // g\n  vitamin_a_retinolaequivalent: 272, // µg\n  vitamin_a_retinol: 250, // µg\n  vitamin_a_betacarotin: 130, // µg\n  vitamin_b1_thiamin: 40, // µg\n  vitamin_b2_riboflavin: 300, // µg\n  vitamin_b3_niacin_nicotinsaeure: 100, // µg\n  vitamin_b3_niacinaequivalent: 5.483, // µg\n  vitamin_b5_pantothensaeure: 400, // µg\n  vitamin_b6_pyridoxin: 70, // µg\n  vitamin_b7_biotin_vitamin_h: 2, // µg\n  vitamin_b9_gesamte_folsaeure: 36, // µg\n  vitamin_b12_cobalamin: 2, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0.5, // µg\n  vitamin_e_tocopherol: 670, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 1.089, // mg\n  kalium: 123, // mg\n  calcium: 958, // mg\n  magnesium: 33, // mg\n  phosphor: 650, // mg\n  schwefel: 240, // mg\n  chlorid: 900, // mg\n  eisen: 280, // µg\n  zink: 4.25, // µg\n  kupfer: 40, // µg\n  mangan: 40, // µg\n  fluorid: 115, // µg\n  iodid: 12, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const MuesliMetrics: FoodMetrics = {\n  kilokalorien: 126, // kcal\n  wasser: 68, // g\n  eiweiss_proteine: 3, // g\n  fett: 2, // g\n  kohlenhydrate: 23, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 2, // BE\n  broteinheiten_ch: 2, // BE\n  carbohydrate_units_en: 2, // CU\n  mineralstoffe_rohasche: 1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 2, // g\n  gesaettigte_fettsaeuren: 0.6, // g\n  zucker: 11.4, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 15, // µg\n  vitamin_a_retinol: 4, // µg\n  vitamin_a_betacarotin: 62, // µg\n  vitamin_b1_thiamin: 136, // µg\n  vitamin_b2_riboflavin: 71, // µg\n  vitamin_b3_niacin_nicotinsaeure: 322, // µg\n  vitamin_b3_niacinaequivalent: 872, // µg\n  vitamin_b5_pantothensaeure: 330, // µg\n  vitamin_b6_pyridoxin: 71, // µg\n  vitamin_b7_biotin_vitamin_h: 5, // µg\n  vitamin_b9_gesamte_folsaeure: 9, // µg\n  vitamin_b12_cobalamin: 0.1, // µg\n  vitamin_c_ascorbinsaeure: 11.123, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 436, // µg\n  vitamin_k_phyllochinon: 15, // µg\n  natrium: 10, // mg\n  kalium: 183, // mg\n  calcium: 34, // mg\n  magnesium: 33, // mg\n  phosphor: 93, // mg\n  schwefel: 45, // mg\n  chlorid: 27, // mg\n  eisen: 1.185, // µg\n  zink: 877, // µg\n  kupfer: 179, // µg\n  mangan: 864, // µg\n  fluorid: 16, // µg\n  iodid: 3, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const VollkornbrotMetrics: FoodMetrics = {\n  kilokalorien: 188, // kcal\n  wasser: 44, // g\n  eiweiss_proteine: 6, // g\n  fett: 1, // g\n  kohlenhydrate: 38, // g\n  ballaststoffe: 9, // g\n  broteinheiten_de: 3, // BE\n  broteinheiten_ch: 4, // BE\n  carbohydrate_units_en: 3, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 0.1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 1, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 0.8, // g\n  salz: 1.1, // g\n  vitamin_a_retinolaequivalent: 1, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 4, // µg\n  vitamin_b1_thiamin: 102, // µg\n  vitamin_b2_riboflavin: 98, // µg\n  vitamin_b3_niacin_nicotinsaeure: 1.329, // µg\n  vitamin_b3_niacinaequivalent: 2.396, // µg\n  vitamin_b5_pantothensaeure: 534, // µg\n  vitamin_b6_pyridoxin: 152, // µg\n  vitamin_b7_biotin_vitamin_h: 5, // µg\n  vitamin_b9_gesamte_folsaeure: 36, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 635, // µg\n  vitamin_k_phyllochinon: 31, // µg\n  natrium: 430, // mg\n  kalium: 290, // mg\n  calcium: 21, // mg\n  magnesium: 56, // mg\n  phosphor: 232, // mg\n  schwefel: 91, // mg\n  chlorid: 705, // mg\n  eisen: 2.661, // µg\n  zink: 2.409, // µg\n  kupfer: 301, // µg\n  mangan: 2.287, // µg\n  fluorid: 102, // µg\n  iodid: 4, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const WeizenbroetchenMetrics: FoodMetrics = {\n  kilokalorien: 248, // kcal\n  wasser: 36, // g\n  eiweiss_proteine: 7, // g\n  fett: 1, // g\n  kohlenhydrate: 51, // g\n  ballaststoffe: 3, // g\n  broteinheiten_de: 4, // BE\n  broteinheiten_ch: 5, // BE\n  carbohydrate_units_en: 3, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 1.4, // g\n  gesaettigte_fettsaeuren: 0.3, // g\n  zucker: 1, // g\n  salz: 1.2, // g\n  vitamin_a_retinolaequivalent: 4, // µg\n  vitamin_a_retinol: 3, // µg\n  vitamin_a_betacarotin: 4, // µg\n  vitamin_b1_thiamin: 68, // µg\n  vitamin_b2_riboflavin: 51, // µg\n  vitamin_b3_niacin_nicotinsaeure: 765, // µg\n  vitamin_b3_niacinaequivalent: 1.998, // µg\n  vitamin_b5_pantothensaeure: 149, // µg\n  vitamin_b6_pyridoxin: 84, // µg\n  vitamin_b7_biotin_vitamin_h: 2, // µg\n  vitamin_b9_gesamte_folsaeure: 9, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 1, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 153, // µg\n  vitamin_k_phyllochinon: 9, // µg\n  natrium: 451, // mg\n  kalium: 100, // mg\n  calcium: 16, // mg\n  magnesium: 21, // mg\n  phosphor: 78, // mg\n  schwefel: 71, // mg\n  chlorid: 731, // mg\n  eisen: 1.325, // µg\n  zink: 924, // µg\n  kupfer: 180, // µg\n  mangan: 511, // µg\n  fluorid: 43, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const PaniertesSchnitzelMetrics: FoodMetrics = {\n  kilokalorien: 238, // kcal\n  wasser: 51, // g\n  eiweiss_proteine: 21, // g\n  fett: 11, // g\n  kohlenhydrate: 14, // g\n  ballaststoffe: 1, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 10.5, // g\n  gesaettigte_fettsaeuren: 3.1, // g\n  zucker: 0.8, // g\n  salz: 0.7, // g\n  vitamin_a_retinolaequivalent: 75, // µg\n  vitamin_a_retinol: 68, // µg\n  vitamin_a_betacarotin: 40, // µg\n  vitamin_b1_thiamin: 678, // µg\n  vitamin_b2_riboflavin: 246, // µg\n  vitamin_b3_niacin_nicotinsaeure: 3.904, // µg\n  vitamin_b3_niacinaequivalent: 7.921, // µg\n  vitamin_b5_pantothensaeure: 853, // µg\n  vitamin_b6_pyridoxin: 370, // µg\n  vitamin_b7_biotin_vitamin_h: 9, // µg\n  vitamin_b9_gesamte_folsaeure: 16, // µg\n  vitamin_b12_cobalamin: 2, // µg\n  vitamin_c_ascorbinsaeure: 6, // µg\n  vitamin_d_calciferole: 1, // µg\n  vitamin_e_tocopherol: 546, // µg\n  vitamin_k_phyllochinon: 23, // µg\n  natrium: 303, // mg\n  kalium: 211, // mg\n  calcium: 21, // mg\n  magnesium: 24, // mg\n  phosphor: 177, // mg\n  schwefel: 181, // mg\n  chlorid: 437, // mg\n  eisen: 1.478, // µg\n  zink: 1.922, // µg\n  kupfer: 94, // µg\n  mangan: 172, // µg\n  fluorid: 77, // µg\n  iodid: 3, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const PommesFritesMetrics: FoodMetrics = {\n  kilokalorien: 124, // kcal\n  wasser: 71, // g\n  eiweiss_proteine: 2, // g\n  fett: 5, // g\n  kohlenhydrate: 17, // g\n  ballaststoffe: 3, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 2, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 2, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 5.1, // g\n  gesaettigte_fettsaeuren: 0.6, // g\n  zucker: 0.7, // g\n  salz: 0.6, // g\n  vitamin_a_retinolaequivalent: 1, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 6, // µg\n  vitamin_b1_thiamin: 99, // µg\n  vitamin_b2_riboflavin: 53, // µg\n  vitamin_b3_niacin_nicotinsaeure: 1.301, // µg\n  vitamin_b3_niacinaequivalent: 1.834, // µg\n  vitamin_b5_pantothensaeure: 404, // µg\n  vitamin_b6_pyridoxin: 310, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 26, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 17.169, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 3.122, // µg\n  vitamin_k_phyllochinon: 28, // µg\n  natrium: 222, // mg\n  kalium: 461, // mg\n  calcium: 8, // mg\n  magnesium: 23, // mg\n  phosphor: 57, // mg\n  schwefel: 40, // mg\n  chlorid: 386, // mg\n  eisen: 454, // µg\n  zink: 389, // µg\n  kupfer: 102, // µg\n  mangan: 158, // µg\n  fluorid: 12, // µg\n  iodid: 5, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ApfelMetrics: FoodMetrics = {\n  kilokalorien: 52, // kcal\n  wasser: 85, // g\n  eiweiss_proteine: 0.3, // g\n  fett: 0.4, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.3, // g\n  organische_saeuren: 0.5, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0.4, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 10.3, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 8, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 45, // µg\n  vitamin_b1_thiamin: 30, // µg\n  vitamin_b2_riboflavin: 30, // µg\n  vitamin_b3_niacin_nicotinsaeure: 200, // µg\n  vitamin_b3_niacinaequivalent: 233, // µg\n  vitamin_b5_pantothensaeure: 100, // µg\n  vitamin_b6_pyridoxin: 50, // µg\n  vitamin_b7_biotin_vitamin_h: 1, // µg\n  vitamin_b9_gesamte_folsaeure: 7, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 12, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 490, // µg\n  vitamin_k_phyllochinon: 4, // µg\n  natrium: 3, // mg\n  kalium: 144, // mg\n  calcium: 7, // mg\n  magnesium: 6, // mg\n  phosphor: 11, // mg\n  schwefel: 6, // mg\n  chlorid: 2, // mg\n  eisen: 480, // µg\n  zink: 120, // µg\n  kupfer: 100, // µg\n  mangan: 65, // µg\n  fluorid: 7, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const BananeMetrics: FoodMetrics = {\n  kilokalorien: 95, // kcal\n  wasser: 74, // g\n  eiweiss_proteine: 1, // g\n  fett: 0.2, // g\n  kohlenhydrate: 21, // g\n  ballaststoffe: 2, // g\n  broteinheiten_de: 2, // BE\n  broteinheiten_ch: 2, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0.2, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 18.4, // g\n  salz: 0.1, // g\n  vitamin_a_retinolaequivalent: 38, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 230, // µg\n  vitamin_b1_thiamin: 44, // µg\n  vitamin_b2_riboflavin: 57, // µg\n  vitamin_b3_niacin_nicotinsaeure: 650, // µg\n  vitamin_b3_niacinaequivalent: 950, // µg\n  vitamin_b5_pantothensaeure: 230, // µg\n  vitamin_b6_pyridoxin: 370, // µg\n  vitamin_b7_biotin_vitamin_h: 6, // µg\n  vitamin_b9_gesamte_folsaeure: 20, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 12, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 270, // µg\n  vitamin_k_phyllochinon: 10, // µg\n  natrium: 1, // mg\n  kalium: 393, // mg\n  calcium: 9, // mg\n  magnesium: 36, // mg\n  phosphor: 28, // mg\n  schwefel: 13, // mg\n  chlorid: 109, // mg\n  eisen: 550, // µg\n  zink: 220, // µg\n  kupfer: 130, // µg\n  mangan: 530, // µg\n  fluorid: 20, // µg\n  iodid: 3, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const MineralwasserMetrics: FoodMetrics = {\n  kilokalorien: 0, // kcal\n  wasser: 100, // g\n  eiweiss_proteine: 0, // g\n  fett: 0, // g\n  kohlenhydrate: 0, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.2, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0, // g\n  gesaettigte_fettsaeuren: 0, // g\n  zucker: 0, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 0, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 0, // µg\n  vitamin_b1_thiamin: 0, // µg\n  vitamin_b2_riboflavin: 0, // µg\n  vitamin_b3_niacin_nicotinsaeure: 0, // µg\n  vitamin_b3_niacinaequivalent: 0, // µg\n  vitamin_b5_pantothensaeure: 0, // µg\n  vitamin_b6_pyridoxin: 0, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 0, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 0, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 12, // mg\n  kalium: 1, // mg\n  calcium: 34, // mg\n  magnesium: 10, // mg\n  phosphor: 0, // mg\n  schwefel: 1, // mg\n  chlorid: 4, // mg\n  eisen: 2, // µg\n  zink: 6, // µg\n  kupfer: 4, // µg\n  mangan: 3, // µg\n  fluorid: 23, // µg\n  iodid: 1, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const SprudelMetrics: FoodMetrics = {\n  kilokalorien: 0, // kcal\n  wasser: 100, // g\n  eiweiss_proteine: 0, // g\n  fett: 0, // g\n  kohlenhydrate: 0, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.3, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0, // g\n  gesaettigte_fettsaeuren: 0, // g\n  zucker: 0, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 0, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 0, // µg\n  vitamin_b1_thiamin: 0, // µg\n  vitamin_b2_riboflavin: 0, // µg\n  vitamin_b3_niacin_nicotinsaeure: 0, // µg\n  vitamin_b3_niacinaequivalent: 0, // µg\n  vitamin_b5_pantothensaeure: 0, // µg\n  vitamin_b6_pyridoxin: 0, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 0, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 0, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 12, // mg\n  kalium: 1, // mg\n  calcium: 35, // mg\n  magnesium: 11, // mg\n  phosphor: 0, // mg\n  schwefel: 1, // mg\n  chlorid: 4, // mg\n  eisen: 0, // µg\n  zink: 6, // µg\n  kupfer: 4, // µg\n  mangan: 3, // µg\n  fluorid: 21, // µg\n  iodid: 1, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const KaffeeMetrics: FoodMetrics = {\n  kilokalorien: 2, // kcal\n  wasser: 99, // g\n  eiweiss_proteine: 0.2, // g\n  fett: 0, // g\n  kohlenhydrate: 0.3, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0, // g\n  gesaettigte_fettsaeuren: 0, // g\n  zucker: 0, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 0, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 0, // µg\n  vitamin_b1_thiamin: 1, // µg\n  vitamin_b2_riboflavin: 10, // µg\n  vitamin_b3_niacin_nicotinsaeure: 700, // µg\n  vitamin_b3_niacinaequivalent: 700, // µg\n  vitamin_b5_pantothensaeure: 1, // µg\n  vitamin_b6_pyridoxin: 0, // µg\n  vitamin_b7_biotin_vitamin_h: 0.1, // µg\n  vitamin_b9_gesamte_folsaeure: 1, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 0, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 1, // mg\n  kalium: 66, // mg\n  calcium: 2, // mg\n  magnesium: 6, // mg\n  phosphor: 2, // mg\n  schwefel: 1, // mg\n  chlorid: 1, // mg\n  eisen: 200, // µg\n  zink: 10, // µg\n  kupfer: 103, // µg\n  mangan: 80, // µg\n  fluorid: 0, // µg\n  iodid: 1, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const KaffeeMilchMetrics: FoodMetrics = {\n  kilokalorien: 4, // kcal\n  wasser: 99, // g\n  eiweiss_proteine: 0.3, // g\n  fett: 0.1, // g\n  kohlenhydrate: 0.4, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 0, // BE\n  broteinheiten_ch: 0, // BE\n  carbohydrate_units_en: 0, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 0, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0.1, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 0.2, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 1, // µg\n  vitamin_a_retinol: 1, // µg\n  vitamin_a_betacarotin: 1, // µg\n  vitamin_b1_thiamin: 2, // µg\n  vitamin_b2_riboflavin: 15, // µg\n  vitamin_b3_niacin_nicotinsaeure: 680, // µg\n  vitamin_b3_niacinaequivalent: 697, // µg\n  vitamin_b5_pantothensaeure: 12, // µg\n  vitamin_b6_pyridoxin: 1, // µg\n  vitamin_b7_biotin_vitamin_h: 0.2, // µg\n  vitamin_b9_gesamte_folsaeure: 1, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 55, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 2, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 3, // mg\n  kalium: 69, // mg\n  calcium: 6, // mg\n  magnesium: 6, // mg\n  phosphor: 5, // mg\n  schwefel: 2, // mg\n  chlorid: 4, // mg\n  eisen: 195, // µg\n  zink: 22, // µg\n  kupfer: 100, // µg\n  mangan: 78, // µg\n  fluorid: 1, // µg\n  iodid: 1, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ApfelsaftMetrics: FoodMetrics = {\n  kilokalorien: 49, // kcal\n  wasser: 88, // g\n  eiweiss_proteine: 0.3, // g\n  fett: 0.3, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.3, // g\n  organische_saeuren: 0.5, // g\n  alkohol_ethanol: 0.2, // g\n  fett_gesamt: 0.3, // g\n  gesaettigte_fettsaeuren: 0.1, // g\n  zucker: 9.6, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 8, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 45, // µg\n  vitamin_b1_thiamin: 25, // µg\n  vitamin_b2_riboflavin: 25, // µg\n  vitamin_b3_niacin_nicotinsaeure: 165, // µg\n  vitamin_b3_niacinaequivalent: 198, // µg\n  vitamin_b5_pantothensaeure: 83, // µg\n  vitamin_b6_pyridoxin: 41, // µg\n  vitamin_b7_biotin_vitamin_h: 1, // µg\n  vitamin_b9_gesamte_folsaeure: 4, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 7.428, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 506, // µg\n  vitamin_k_phyllochinon: 4, // µg\n  natrium: 3, // mg\n  kalium: 126, // mg\n  calcium: 7, // mg\n  magnesium: 6, // mg\n  phosphor: 11, // mg\n  schwefel: 6, // mg\n  chlorid: 2, // mg\n  eisen: 470, // µg\n  zink: 124, // µg\n  kupfer: 103, // µg\n  mangan: 66, // µg\n  fluorid: 7, // µg\n  iodid: 2, // µg\n};\n","// tslint:disable:object-literal-sort-keys\n\nimport { FoodMetrics } from '../FoodMetrics';\n\nexport const ColaMetrics: FoodMetrics = {\n  kilokalorien: 61, // kcal\n  wasser: 85, // g\n  eiweiss_proteine: 3, // g\n  fett: 0, // g\n  kohlenhydrate: 11, // g\n  ballaststoffe: 0, // g\n  broteinheiten_de: 1, // BE\n  broteinheiten_ch: 1, // BE\n  carbohydrate_units_en: 1, // CU\n  mineralstoffe_rohasche: 0.1, // g\n  organische_saeuren: 1, // g\n  alkohol_ethanol: 0, // g\n  fett_gesamt: 0, // g\n  gesaettigte_fettsaeuren: 0, // g\n  zucker: 10.9, // g\n  salz: 0, // g\n  vitamin_a_retinolaequivalent: 0, // µg\n  vitamin_a_retinol: 0, // µg\n  vitamin_a_betacarotin: 0, // µg\n  vitamin_b1_thiamin: 0, // µg\n  vitamin_b2_riboflavin: 0, // µg\n  vitamin_b3_niacin_nicotinsaeure: 0, // µg\n  vitamin_b3_niacinaequivalent: 283, // µg\n  vitamin_b5_pantothensaeure: 0, // µg\n  vitamin_b6_pyridoxin: 0, // µg\n  vitamin_b7_biotin_vitamin_h: 0, // µg\n  vitamin_b9_gesamte_folsaeure: 0, // µg\n  vitamin_b12_cobalamin: 0, // µg\n  vitamin_c_ascorbinsaeure: 0, // µg\n  vitamin_d_calciferole: 0, // µg\n  vitamin_e_tocopherol: 0, // µg\n  vitamin_k_phyllochinon: 0, // µg\n  natrium: 4, // mg\n  kalium: 1, // mg\n  calcium: 4, // mg\n  magnesium: 1, // mg\n  phosphor: 6, // mg\n  schwefel: 9, // mg\n  chlorid: 10, // mg\n  eisen: 30, // µg\n  zink: 10, // µg\n  kupfer: 30, // µg\n  mangan: 35, // µg\n  fluorid: 15, // µg\n  iodid: 2, // µg\n};\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nexport const FullWidthGridItem = (props: { children: React.ReactNode }) => (\n  <Grid item xs={12} sm={12}>\n    {props.children}\n  </Grid>\n);\n","import React from 'react';\n\nimport { Grid, Paper, Theme } from '@material-ui/core';\nimport { createStyles, makeStyles, withStyles, WithStyles } from '@material-ui/styles';\nimport { StyledComponentProps, StyleRulesCallback, Styles } from '@material-ui/styles/withStyles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: (props: Props) => ({ maxWidth: `${props.maxWidth}px`, margin: '100px auto', padding: theme.spacing.unit * 2 })\n}));\n\nexport interface Props {\n  maxWidth: number;\n  children: React.ReactNode;\n}\n\nexport const PrettyContent = (props: Props) => {\n  const classes = useStyles(props);\n  return (\n    <Paper classes={{ root: classes.paper }}>\n      <Grid container={true} spacing={16}>\n        {props.children}\n      </Grid>\n    </Paper>\n  );\n};\n","import { Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { foodList } from '../../types/FoodList';\nimport { FullWidthGridItem } from '../grid/FullWidthGridItem';\nimport { PrettyContent } from '../grid/PrettyContent';\n\nexport const PrintTable: React.FunctionComponent<{}> = () => (\n  <PrettyContent maxWidth={1000}>\n    <FullWidthGridItem>\n      <Typography variant=\"display1\">Aufgabenblatt</Typography>\n      <Typography variant=\"caption\">Copy &amp; Paste to Word</Typography>\n    </FullWidthGridItem>\n    <FullWidthGridItem>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Gericht</TableCell>\n            <TableCell>Frühstück</TableCell>\n            <TableCell>Mittagessen</TableCell>\n            <TableCell>Abendessen</TableCell>\n            <TableCell>Gesamt</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {foodList.map((food, idx) => (\n            <TableRow key={idx}>\n              <TableCell>\n                <span style={{ fontWeight: 'bold' }}>{food.info.nicename}</span>\n                &nbsp;&nbsp;\n                <span style={{ fontStyle: 'italic', color: '#777' }}>{food.info.unit}</span>\n              </TableCell>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </FullWidthGridItem>\n  </PrettyContent>\n);\n","export interface FoodMetrics {\n  kilokalorien: number; // kcal\n  wasser: number; // g\n  eiweiss_proteine: number; // g\n  fett: number; // g\n  kohlenhydrate: number; // g\n  ballaststoffe: number; // g\n  broteinheiten_de: number; // BE\n  broteinheiten_ch: number; // BE\n  carbohydrate_units_en: number; // CU\n  mineralstoffe_rohasche: number; // g\n  organische_saeuren: number; // g\n  alkohol_ethanol: number; // g\n  fett_gesamt: number; // g\n  gesaettigte_fettsaeuren: number; // g\n  zucker: number; // g\n  salz: number; // g\n  vitamin_a_retinolaequivalent: number; // µg\n  vitamin_a_retinol: number; // µg\n  vitamin_a_betacarotin: number; // µg\n  vitamin_b1_thiamin: number; // µg\n  vitamin_b2_riboflavin: number; // µg\n  vitamin_b3_niacin_nicotinsaeure: number; // µg\n  vitamin_b3_niacinaequivalent: number; // µg\n  vitamin_b5_pantothensaeure: number; // µg\n  vitamin_b6_pyridoxin: number; // µg\n  vitamin_b7_biotin_vitamin_h: number; // µg\n  vitamin_b9_gesamte_folsaeure: number; // µg\n  vitamin_b12_cobalamin: number; // µg\n  vitamin_c_ascorbinsaeure: number; // µg\n  vitamin_d_calciferole: number; // µg\n  vitamin_e_tocopherol: number; // µg\n  vitamin_k_phyllochinon: number; // µg\n  natrium: number; // mg\n  kalium: number; // mg\n  calcium: number; // mg\n  magnesium: number; // mg\n  phosphor: number; // mg\n  schwefel: number; // mg\n  chlorid: number; // mg\n  eisen: number; // µg\n  zink: number; // µg\n  kupfer: number; // µg\n  mangan: number; // µg\n  fluorid: number; // µg\n  iodid: number; // µg\n}\n\nexport const relevantMetrics: Array<keyof FoodMetrics> = [\n  'kilokalorien',\n  'salz',\n  'zucker',\n  'wasser',\n  'vitamin_c_ascorbinsaeure',\n  'vitamin_d_calciferole',\n  // 'vitamin_e_tocopherol',\n  'vitamin_b1_thiamin',\n  'vitamin_b2_riboflavin',\n  'vitamin_b6_pyridoxin',\n  'vitamin_b12_cobalamin',\n  'vitamin_b9_gesamte_folsaeure'\n];\n\nexport const getNiceName = (field: keyof FoodMetrics): string => {\n  switch (field) {\n    case 'kilokalorien':\n      return 'Kalorien';\n    case 'salz':\n      return 'Salz';\n    case 'zucker':\n      return 'Zucker';\n    case 'wasser':\n      return 'Wasser';\n    case 'vitamin_c_ascorbinsaeure':\n      return 'Vitamin C';\n    case 'vitamin_d_calciferole':\n      return 'Vitamin D';\n    // case 'vitamin_e_tocopherol':\n    //   return 'Vitamin E';\n    case 'vitamin_b1_thiamin':\n      return 'Vitamin B1';\n    case 'vitamin_b2_riboflavin':\n      return 'Vitamin B2';\n    case 'vitamin_b6_pyridoxin':\n      return 'Vitamin B6';\n    case 'vitamin_b12_cobalamin':\n      return 'Vitamin B12';\n    case 'vitamin_b9_gesamte_folsaeure':\n      return 'Folsäure';\n\n    default:\n      return '<< not-translated >>';\n  }\n};\n\nexport const getDescription = (field: keyof FoodMetrics): string => {\n  switch (field) {\n    case 'salz':\n      return `Kochsalz und der größte Teil des verkauften Meersalzes bestehen aus den Bausteinen Natrium und Chlorid, woraus wiederum Natriumchlorid (NaCl) entsteht – ein\n      unverzichtbares Lebenselement und essentiell für den Organismus. Natrium regelt den Wasserhaushalt, die Reizübertragung von Muskel- und Nervenzellen und aktiviert\n      viele Stoffwechselvorgänge. Chlorid ist unter anderem ein wichtiger Bestandteil der Verdauungssäfte. Es bewirkt die Bildung von Salzsäure im Magen, die als eine\n      Komponente des Magensafts Proteine aus der Nahrung aufspaltet und unerwünschte Mikroorganismen unschädlich macht.`;\n    case 'zucker':\n      return `Damit der Mensch Überleben kann, braucht er große Mengen an Energie. Als Treibstoff dafür dient in erste Linie Zucker – genauer gesagt, brauchen wir zum Atmen,\n      Laufen und Denken den Einfachzucker Glucose. Glucose ist unser wichtigster Energie-Lieferant – allein unser Gehirn verbrennt etwa 130-140 Gramm Glucose pro Tag!\n      ABER! Das bedeutet aber NICHT, dass wir unserem Körper raffinierten Haushaltszucker geben und Süßigkeiten essen und Softdrinks trinken müssen! Unser Körper kann den\n      „Treibstoff“ Glucose auch selbst herstellen, indem er die Glucose aus Polysacchariden (Stärke) im Darm aufspaltet, die beispielsweise in Gemüse und (Pseudo-) Getreide enthalten ist.`;\n    case 'wasser':\n      return `Es ist die Grundlage allen Lebens und sogar unser Körper besteht zu mehr als der Hälfte daraus: Wasser ist das wichtigste Lebensmittel des Menschen.\n      Nehmen wir zu wenig Flüssigkeit auf, ist der Stoffwechsel gestört und unsere körperliche wie geistige Leistungsfähigkeit lässt nach.\n      Als Urin schwemmt Wasser Schadstoffe aus, als Schweiß kühlt es unseren Körper.`;\n    case 'vitamin_c_ascorbinsaeure':\n      return `Vitamin C (Ascorbinsäure) wird benötigt für Wachstum und Gesunderhaltung von Knochen, Zahnfleisch und Zähnen, Sehnen und Blutgefäßen.\n      Sehr wichtig ist Vitamin C für die Abwehr von Infektionen, für die Aufnahme von Eisen und für die Wundheilung.`;\n    case 'vitamin_d_calciferole':\n      return `Die Stoffe der Vitamin D-Gruppe (Calciferole) sind notwendig für die Regelung des Kalzium- und Phosphatgleichgewichts im Körper.\n      Vitamin D unterstützt die Aufnahme von Kalzium aus dem Darm und ist wichtig für die Stärkung von Knochen und Zähnen.`;\n    // case 'vitamin_e_tocopherol':\n    //   return `Vitamin E ist notwendig für eine normale Zellstruktur und für die Funktion von roten Blutkörperchen.\n    //     Vitamin E schützt die Lungen vor Beschädigungen durch Luftverschmutzung und schützt die roten Blutkörperchen.`;\n    case 'vitamin_b1_thiamin':\n      return `Vitamin B1 (Thiamin) spielt eine wichtige Rolle bei der Verwertung von Kohlenhydraten und ist damit wichtig für alle Funktionen von Muskeln, Herz und Nerven.`;\n    case 'vitamin_b2_riboflavin':\n      return `Vitamin B2 (Riboflavin) ist wichtig für den Abbau und die Verwertung der Nährstoffe Kohlenhydrate, Eiweiß und Fett.\n        Die Zellen benötigen es zur Energierzeugung sowie zur Verwertung anderer B-Vitamine und zur Hormonerzeugung durch die Nebennieren.`;\n    case 'vitamin_b6_pyridoxin':\n      return `Ein Vitamin, dass für den Abbau und die Verwertung von Kohlenhydraten, Eiweiß und Fetten benötigt wird.\n      Wichtig auch für die Gesunderhaltung der Haut, die Bildung von roten Blutkörperchen und Antikörpern und die Funktion des Verdauungs- und Nervensystems.`;\n    case 'vitamin_b12_cobalamin':\n      return `Vitamin B12 (Cyanocobalamin) spielt eine wichtige Rolle bei der Produktion von roten Blutkörperchen im Knochenmark, bei der Verwertung von Folsäure und von Kohlenhydraten sowie für die Funktion des Nervensystems.`;\n    case 'vitamin_b9_gesamte_folsaeure':\n      return `Vitamin B9 (Folsäure) benötigen wir für das Wachstum und Reproduktion. Zudem ist Folsäure wichtig für die Erzeugung roter Blutkörperchen und trägt wesentlich bei zur Funktion des Nervensystems.`;\n    default:\n      return '';\n  }\n};\n\nexport const formatValue = (value: number, field: keyof FoodMetrics): string => {\n  switch (field) {\n    case 'kilokalorien':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} kcal`;\n    case 'salz':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} g`;\n    case 'zucker':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 1, maximumFractionDigits: 1 })} g`;\n    case 'wasser':\n      return `${value.toFixed(0)} ml`;\n    // case 'vitamin_e_tocopherol':\n    case 'vitamin_b1_thiamin':\n    case 'vitamin_b2_riboflavin':\n    case 'vitamin_b6_pyridoxin':\n    case 'vitamin_c_ascorbinsaeure':\n    case 'vitamin_b9_gesamte_folsaeure':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} µg`;\n    case 'vitamin_d_calciferole':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 1, maximumFractionDigits: 1 })} µg`;\n    case 'vitamin_b12_cobalamin':\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} µg`;\n    default:\n      return `${value.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} ??`;\n  }\n};\n\nexport const getRecommendedDailyAmount = (field: keyof FoodMetrics): number => {\n  switch (field) {\n    case 'salz':\n      return 6;\n    case 'zucker':\n      return 65;\n    case 'wasser':\n      return 2650;\n    case 'vitamin_c_ascorbinsaeure':\n      return 100000;\n    case 'vitamin_d_calciferole':\n      return 20;\n    case 'vitamin_e_tocopherol':\n      return 12000;\n    case 'vitamin_b1_thiamin':\n      return 1100;\n    case 'vitamin_b2_riboflavin':\n      return 1200;\n    case 'vitamin_b6_pyridoxin':\n      return 1500;\n    case 'vitamin_b12_cobalamin':\n      return 3;\n    case 'vitamin_b9_gesamte_folsaeure':\n      return 400;\n    default:\n      return NaN;\n  }\n};\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { Food } from '../../types/FoodList';\n\nexport interface Props {\n  food: Food;\n  value: number | undefined;\n  focus: boolean;\n  onChange: (value: number) => void;\n  onFocus: () => void;\n  onEnterKey: () => void;\n}\n\nexport const FoodInput: React.FunctionComponent<Props> = props => {\n  const textFieldRef = useRef<HTMLElement>();\n\n  useEffect(() => {\n    if (props.focus && textFieldRef.current !== undefined) {\n      textFieldRef.current.focus();\n    }\n  }, [props.focus]);\n\n  return (\n    <TextField\n      label={props.food.info.nicename}\n      helperText={props.food.info.unit}\n      type=\"number\"\n      fullWidth={true}\n      value={props.value ? props.value : ''}\n      onChange={event => props.onChange(parseFloat(event.target.value))}\n      onFocus={props.onFocus}\n      onKeyDown={event => event.key === 'Enter' && props.onEnterKey()}\n      inputRef={textFieldRef}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Table, TableBody, TableCell, TableFooter, TableHead, TableRow, Typography } from '@material-ui/core';\n\nimport { Food, foodList } from '../../types/FoodList';\nimport { FoodMetrics, formatValue, getNiceName, getRecommendedDailyAmount, relevantMetrics } from '../../types/FoodMetrics';\n\nexport interface ResultProp {\n  food: Food;\n  units: number;\n}\n\nexport interface Props {\n  results: ResultProp[];\n  showInfo: (metricName: keyof FoodMetrics) => void;\n}\n\nconst reduce = (results: ResultProp[], field: keyof FoodMetrics) => {\n  const reducer = (acc: number, cur: ResultProp) => acc + ((cur.units * cur.food.info.gPerUnit) / 100) * cur.food.metrics[field];\n  return results.reduce(reducer, 0);\n};\n\nconst NoBreakCell = (props: { children: React.ReactNode }) => (\n  <TableCell align=\"right\" style={{ whiteSpace: 'nowrap' }}>\n    {props.children}\n  </TableCell>\n);\n\nexport const ResultsTable: React.FunctionComponent<Props> = props => {\n  return (\n    <>\n      <Typography variant=\"display1\">Ergebnis</Typography>\n      <div style={{ overflow: 'auto' }}>\n        <Table padding=\"dense\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Inhaltsstoff</TableCell>\n              <NoBreakCell>Tagesbedarf</NoBreakCell>\n              <NoBreakCell>Tatsächlich</NoBreakCell>\n              {props.results.map(result => (\n                <NoBreakCell key={result.food.info.nicename}>\n                  {result.food.info.nicename}\n                  <br />\n                  <i>{result.units * result.food.info.gPerUnit} g</i>\n                </NoBreakCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {relevantMetrics.map(metricName => {\n              return (\n                <TableRow key={metricName}>\n                  <TableCell onClick={() => props.showInfo(metricName)} style={{ cursor: 'pointer' }}>\n                    {getNiceName(metricName)}\n                  </TableCell>\n                  <NoBreakCell>{!isNaN(getRecommendedDailyAmount(metricName)) && formatValue(getRecommendedDailyAmount(metricName), metricName)}</NoBreakCell>\n                  <NoBreakCell> {formatValue(reduce(props.results, metricName), metricName)}</NoBreakCell>\n                  {props.results.map(({ food, units }) => {\n                    const weight = units * food.info.gPerUnit;\n                    const value = (weight / 100) * food.metrics[metricName];\n                    return <NoBreakCell key={food.info.nicename}>{formatValue(value, metricName)}</NoBreakCell>;\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport { foodList } from '../../types/FoodList';\nimport { FoodMetrics, getDescription, getNiceName } from '../../types/FoodMetrics';\nimport { FullWidthGridItem } from '../grid/FullWidthGridItem';\nimport { PrettyContent } from '../grid/PrettyContent';\nimport { FoodInput } from './FoodInput';\nimport { ResultProp, ResultsTable } from './ResultsTable';\n\ninterface UnitsMap {\n  [key: number]: number | undefined;\n}\n\nexport const QuestionairePage: React.ComponentType<{}> = () => {\n  const [units, setUnits] = useState<UnitsMap>({});\n  const [focusedIdx, setFocusedIdx] = useState<number>();\n  const [showResults, setShowResults] = useState<boolean>(false);\n  const [visibleInfo, setVisibleInfo] = useState<keyof FoodMetrics>();\n  const results = foodList\n    .map((food, idx) => ({ food, units: units[idx] }))\n    .filter((result): result is ResultProp => result.units !== undefined && result.units !== 0);\n\n  return (\n    <>\n      {!showResults && (\n        <PrettyContent maxWidth={400}>\n          {foodList.map((food, idx) => {\n            return (\n              <FullWidthGridItem key={idx}>\n                <FoodInput\n                  food={food}\n                  focus={idx === focusedIdx}\n                  onChange={newValue => setUnits({ ...units, [idx]: newValue })}\n                  onFocus={() => setFocusedIdx(idx)}\n                  onEnterKey={() => setFocusedIdx(idx + 1)}\n                  value={units[idx]}\n                />\n              </FullWidthGridItem>\n            );\n          })}\n          <FullWidthGridItem>\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => setShowResults(true)}>\n              Auswertung\n            </Button>\n          </FullWidthGridItem>\n        </PrettyContent>\n      )}\n      {showResults && (\n        <PrettyContent maxWidth={1200}>\n          <FullWidthGridItem>\n            <ResultsTable results={results} showInfo={setVisibleInfo} />\n          </FullWidthGridItem>\n          <FullWidthGridItem>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setShowResults(false)}>\n              Zurück\n            </Button>\n          </FullWidthGridItem>\n        </PrettyContent>\n      )}\n      {visibleInfo && getDescription(visibleInfo) && (\n        <Dialog open={true} onClose={() => setVisibleInfo(undefined)}>\n          <DialogTitle>{getNiceName(visibleInfo)}</DialogTitle>\n          <DialogContent>\n            <Typography>{getDescription(visibleInfo)}</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setVisibleInfo(undefined)} variant=\"flat\">\n              Schließen\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import { installStyles } from './config'; // Must be the first input, otherwise styleing may fail\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createMuiTheme, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { FoodEmojiBackground } from './components/FoodEmojiBackground';\nimport { Header } from './components/header/Header';\nimport { PrintTable } from './components/print/PrintTable';\nimport { QuestionairePage } from './components/questionaire/QuestionairePage';\n\ninstallStyles();\n\nconst defaultTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst App: React.FunctionComponent<{}> = () => {\n  const [showPrintTable, setShowPrintTable] = useState<boolean>(false);\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={defaultTheme}>\n        <FoodEmojiBackground />\n        <Header onHiddenClick={() => setShowPrintTable(!showPrintTable)} />\n        {!showPrintTable && <QuestionairePage />}\n        {showPrintTable && <PrintTable />}\n      </ThemeProvider>\n    </>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}